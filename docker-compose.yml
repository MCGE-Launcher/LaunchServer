networks:
  mcgenet:
    driver: bridge
    external: true

services:
  goravel:
    container_name: ${COMPOSE_PROJECT_NAME}__goravel
    build:
      context: .
      dockerfile: ./.docker/goravel/Dockerfile
    depends_on:
      - postgres
      - redis
    ports:
      - "${GORAVEL_PORT}:3000"
    restart: always
    profiles:
      - production
    networks:
      - mcgenet

  redis:
    image: redis:alpine
    container_name: ${COMPOSE_PROJECT_NAME}__redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - ./.docker/redis/data:/data
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "$REDIS_PASSWORD", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 5
    tty: true
    stdin_open: true
    command: >
      redis-server --bind 0.0.0.0 --requirepass $REDIS_PASSWORD --appendonly yes --appendfsync everysec
    networks:
      - mcgenet

  postgres:
    image: postgres:16.2-alpine
    container_name: ${COMPOSE_PROJECT_NAME}__postgres
    restart: always
    tty: true
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
      # PGDATA: /var/lib/pg_data
    volumes:
      - ./.docker/postgres/data:/var/lib/postgresql/data
    ports:
      - ${POSTGRES_PORT}:5432
    networks:
      - mcgenet

  nginx:
    image: nginx:alpine
    container_name: ${COMPOSE_PROJECT_NAME}__nginx
    restart: unless-stopped
    tty: true
    volumes:
      - ./.docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./.docker/nginx/sites-enabled/default.conf:/etc/nginx/conf.d/default.conf
      - ./.docker/nginx/logs:/var/log/nginx
    depends_on:
      - goravel
    ports:
      - "${NGINX_PORT}:80"
    profiles:
      - production
    networks:
      - mcgenet
